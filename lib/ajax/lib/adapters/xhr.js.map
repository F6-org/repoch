{"version":3,"sources":["../../../../src/ajax/lib/adapters/xhr.js"],"names":["xhrAdapter","btoa","window","bind","btoaHelper","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","utils","isFormData","request","XMLHttpRequest","loadEvent","xDomain","process","env","NODE_ENV","XDomainRequest","url","onprogress","handleProgress","ontimeout","handleTimeout","auth","username","password","Authorization","open","method","toUpperCase","params","paramsSerializer","timeout","handleLoad","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","response","statusText","onerror","handleError","BROWSER","isStandardBrowserEnv","cookies","require","default","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","onCanceled","cancel","abort","send"],"mappings":"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","file":"xhr.js","sourcesContent":["'use strict';\n\nimport utils from './../utils';\nimport settle from './../core/settle';\nimport buildURL from './../helpers/buildURL';\nimport parseHeaders from './../helpers/parseHeaders';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin';\nimport createError from '../core/createError';\nimport btoaHelper from './../helpers/btoa';\nconst btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || btoaHelper;\n\nexport default function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED'));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (process.env.BROWSER && utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies').default;\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        if (request.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n"]}