{"version":3,"sources":["../../../src/ajax/lib/defaults.js"],"names":["PROTECTION_PREFIX","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","value","utils","isUndefined","getDefaultAdapter","adapter","XMLHttpRequest","require","process","env","BROWSER","default","defaults","transformRequest","data","isFormData","isArrayBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","toString","isObject","JSON","stringify","transformResponse","replace","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","forEach","forEachMehtodNoData","method","forEachMethodWithData","merge"],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;;;AAEA,IAAIA,oBAAoB,cAAxB;AACA,IAAIC,uBAAuB;AACzB,kBAAgB;AADS,CAA3B;;AAIA,SAASC,qBAAT,CAA+BC,OAA/B,EAAwCC,KAAxC,EAA+C;AAC7C,MAAI,CAACC,gBAAMC,WAAN,CAAkBH,OAAlB,CAAD,IAA+BE,gBAAMC,WAAN,CAAkBH,QAAQ,cAAR,CAAlB,CAAnC,EAA+E;AAC7EA,YAAQ,cAAR,IAA0BC,KAA1B;AACD;AACF;;AAED,SAASG,iBAAT,GAA6B;AAC3B,MAAIC,OAAJ;AACA,MAAI,OAAOC,cAAP,KAA0B,WAA9B,EAA2C;AACzC;AACAD,cAAUE,QAAQ,gBAAR,CAAV;AACD,GAHD,MAGO,IAAI,CAACC,QAAQC,GAAR,CAAYC,OAAb,IAAwB,OAAOF,OAAP,KAAmB,WAA/C,EAA4D;AACjE;AACAH,cAAUE,QAAQ,iBAAR,CAAV;AACD;AACD,SAAOF,QAAQM,OAAf;AACD;;AAED,IAAIC,WAAW;AACbP,WAASD,mBADI;;AAGbS,oBAAkB,CAAC,SAASA,gBAAT,CAA0BC,IAA1B,EAAgCd,OAAhC,EAAyC;AAC1D,uCAAoBA,OAApB,EAA6B,cAA7B;AACA,QAAIE,gBAAMa,UAAN,CAAiBD,IAAjB,KACFZ,gBAAMc,aAAN,CAAoBF,IAApB,CADE,IAEFZ,gBAAMe,QAAN,CAAeH,IAAf,CAFE,IAGFZ,gBAAMgB,MAAN,CAAaJ,IAAb,CAHE,IAIFZ,gBAAMiB,MAAN,CAAaL,IAAb,CAJF,EAKE;AACA,aAAOA,IAAP;AACD;AACD,QAAIZ,gBAAMkB,iBAAN,CAAwBN,IAAxB,CAAJ,EAAmC;AACjC,aAAOA,KAAKO,MAAZ;AACD;AACD,QAAInB,gBAAMoB,iBAAN,CAAwBR,IAAxB,CAAJ,EAAmC;AACjCf,4BAAsBC,OAAtB,EAA+B,iDAA/B;AACA,aAAOc,KAAKS,QAAL,EAAP;AACD;AACD,QAAIrB,gBAAMsB,QAAN,CAAeV,IAAf,CAAJ,EAA0B;AACxBf,4BAAsBC,OAAtB,EAA+B,gCAA/B;AACA,aAAOyB,KAAKC,SAAL,CAAeZ,IAAf,CAAP;AACD;AACD,WAAOA,IAAP;AACD,GAtBiB,CAHL;;AA2Bba,qBAAmB,CAAC,SAASA,iBAAT,CAA2Bb,IAA3B,EAAiC;AACnD;AACA,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,aAAOA,KAAKc,OAAL,CAAa/B,iBAAb,EAAgC,EAAhC,CAAP;AACA,UAAI;AACFiB,eAAOW,KAAKI,KAAL,CAAWf,IAAX,CAAP;AACD,OAFD,CAEE,OAAOgB,CAAP,EAAU,CAAE,YAAc;AAC7B;AACD,WAAOhB,IAAP;AACD,GATkB,CA3BN;;AAsCbiB,WAAS,CAtCI;;AAwCbC,kBAAgB,YAxCH;AAyCbC,kBAAgB,cAzCH;;AA2CbC,oBAAkB,CAAC,CA3CN;;AA6CbC,kBAAgB,SAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC9C,WAAOA,UAAU,GAAV,IAAiBA,SAAS,GAAjC;AACD;AA/CY,CAAf;;AAkDAxB,SAASZ,OAAT,GAAmB;AACjBqC,UAAQ;AACN,cAAU;AADJ;AADS,CAAnB;;AAMAnC,gBAAMoC,OAAN,CAAc,CAAC,QAAD,EAAW,KAAX,EAAkB,MAAlB,CAAd,EAAyC,SAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AAC5E5B,WAASZ,OAAT,CAAiBwC,MAAjB,IAA2B,EAA3B;AACD,CAFD;;AAIAtC,gBAAMoC,OAAN,CAAc,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,CAAd,EAAwC,SAASG,qBAAT,CAA+BD,MAA/B,EAAuC;AAC7E5B,WAASZ,OAAT,CAAiBwC,MAAjB,IAA2BtC,gBAAMwC,KAAN,CAAY5C,oBAAZ,CAA3B;AACD,CAFD;;kBAIec,Q","file":"defaults.js","sourcesContent":["'use strict';\n\nimport utils from './utils';\nimport normalizeHeaderName from './helpers/normalizeHeaderName';\n\nvar PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (!process.env.BROWSER && typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter.default;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      data = data.replace(PROTECTION_PREFIX, '');\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMehtodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n"]}