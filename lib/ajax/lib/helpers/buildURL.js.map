{"version":3,"sources":["../../../../src/ajax/lib/helpers/buildURL.js"],"names":["buildURL","encode","val","encodeURIComponent","replace","url","params","paramsSerializer","serializedParams","utils","isURLSearchParams","toString","parts","forEach","serialize","key","isArray","parseValue","v","isDate","toISOString","isObject","JSON","stringify","push","join","indexOf"],"mappings":"AAAA;;;;;kBAsBwBA,Q;;AApBxB;;;;;;AAEA,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnB,SAAOC,mBAAmBD,GAAnB,EACLE,OADK,CACG,OADH,EACY,GADZ,EAELA,OAFK,CAEG,OAFH,EAEY,GAFZ,EAGLA,OAHK,CAGG,MAHH,EAGW,GAHX,EAILA,OAJK,CAIG,OAJH,EAIY,GAJZ,EAKLA,OALK,CAKG,MALH,EAKW,GALX,EAMLA,OANK,CAMG,OANH,EAMY,GANZ,EAOLA,OAPK,CAOG,OAPH,EAOY,GAPZ,CAAP;AAQD;;AAED;;;;;;;AAOe,SAASJ,QAAT,CAAkBK,GAAlB,EAAuBC,MAAvB,EAA+BC,gBAA/B,EAAiD;AAC9D;AACA,MAAI,CAACD,MAAL,EAAa;AACX,WAAOD,GAAP;AACD;;AAED,MAAIG,gBAAJ;AACA,MAAID,gBAAJ,EAAsB;AACpBC,uBAAmBD,iBAAiBD,MAAjB,CAAnB;AACD,GAFD,MAEO,IAAIG,gBAAMC,iBAAN,CAAwBJ,MAAxB,CAAJ,EAAqC;AAC1CE,uBAAmBF,OAAOK,QAAP,EAAnB;AACD,GAFM,MAEA;AACL,QAAIC,QAAQ,EAAZ;;AAEAH,oBAAMI,OAAN,CAAcP,MAAd,EAAsB,SAASQ,SAAT,CAAmBZ,GAAnB,EAAwBa,GAAxB,EAA6B;AACjD,UAAIb,QAAQ,IAAR,IAAgB,OAAOA,GAAP,KAAe,WAAnC,EAAgD;AAC9C;AACD;;AAED,UAAIO,gBAAMO,OAAN,CAAcd,GAAd,CAAJ,EAAwB;AACtBa,cAAMA,MAAM,IAAZ;AACD;;AAED,UAAI,CAACN,gBAAMO,OAAN,CAAcd,GAAd,CAAL,EAAyB;AACvBA,cAAM,CAACA,GAAD,CAAN;AACD;;AAEDO,sBAAMI,OAAN,CAAcX,GAAd,EAAmB,SAASe,UAAT,CAAoBC,CAApB,EAAuB;AACxC,YAAIT,gBAAMU,MAAN,CAAaD,CAAb,CAAJ,EAAqB;AACnBA,cAAIA,EAAEE,WAAF,EAAJ;AACD,SAFD,MAEO,IAAIX,gBAAMY,QAAN,CAAeH,CAAf,CAAJ,EAAuB;AAC5BA,cAAII,KAAKC,SAAL,CAAeL,CAAf,CAAJ;AACD;AACDN,cAAMY,IAAN,CAAWvB,OAAOc,GAAP,IAAc,GAAd,GAAoBd,OAAOiB,CAAP,CAA/B;AACD,OAPD;AAQD,KArBD;;AAuBAV,uBAAmBI,MAAMa,IAAN,CAAW,GAAX,CAAnB;AACD;;AAED,MAAIjB,gBAAJ,EAAsB;AACpBH,WAAO,CAACA,IAAIqB,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,GAA0B,GAA1B,GAAgC,GAAjC,IAAwClB,gBAA/C;AACD;;AAED,SAAOH,GAAP;AACD","file":"buildURL.js","sourcesContent":["'use strict';\n\nimport utils from './../utils';\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      }\n\n      if (!utils.isArray(val)) {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n"]}