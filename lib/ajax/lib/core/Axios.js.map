{"version":3,"sources":["../../../../src/ajax/lib/core/Axios.js"],"names":["Axios","instanceConfig","defaults","interceptors","request","InterceptorManager","response","prototype","config","utils","merge","url","arguments","method","baseURL","chain","dispatchRequest","undefined","promise","Promise","resolve","forEach","unshiftRequestInterceptors","interceptor","unshift","fulfilled","rejected","pushResponseInterceptors","push","length","then","shift","forEachMethodNoData","forEachMethodWithData","data"],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;AAKA,SAASA,KAAT,CAAeC,cAAf,EAA+B;AAC7B,OAAKC,QAAL,GAAgBD,cAAhB;AACA,OAAKE,YAAL,GAAoB;AAClBC,aAAS,IAAIC,4BAAJ,EADS;AAElBC,cAAU,IAAID,4BAAJ;AAFQ,GAApB;AAID;;AAED;;;;;AAKAL,MAAMO,SAAN,CAAgBH,OAAhB,GAA0B,SAASA,OAAT,CAAiBI,MAAjB,EAAyB;AACjD;AACA;AACA,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9BA,aAASC,gBAAMC,KAAN,CAAY;AACnBC,WAAKC,UAAU,CAAV;AADc,KAAZ,EAENA,UAAU,CAAV,CAFM,CAAT;AAGD;;AAEDJ,WAASC,gBAAMC,KAAN,CAAYR,kBAAZ,EAAsB,KAAKA,QAA3B,EAAqC,EAAEW,QAAQ,KAAV,EAArC,EAAwDL,MAAxD,CAAT;;AAEA;AACA,MAAIA,OAAOM,OAAP,IAAkB,CAAC,6BAAcN,OAAOG,GAArB,CAAvB,EAAkD;AAChDH,WAAOG,GAAP,GAAa,2BAAYH,OAAOM,OAAnB,EAA4BN,OAAOG,GAAnC,CAAb;AACD;;AAED;AACA,MAAII,QAAQ,CAACC,yBAAD,EAAkBC,SAAlB,CAAZ;AACA,MAAIC,UAAUC,QAAQC,OAAR,CAAgBZ,MAAhB,CAAd;;AAEA,OAAKL,YAAL,CAAkBC,OAAlB,CAA0BiB,OAA1B,CAAkC,SAASC,0BAAT,CAAoCC,WAApC,EAAiD;AACjFR,UAAMS,OAAN,CAAcD,YAAYE,SAA1B,EAAqCF,YAAYG,QAAjD;AACD,GAFD;;AAIA,OAAKvB,YAAL,CAAkBG,QAAlB,CAA2Be,OAA3B,CAAmC,SAASM,wBAAT,CAAkCJ,WAAlC,EAA+C;AAChFR,UAAMa,IAAN,CAAWL,YAAYE,SAAvB,EAAkCF,YAAYG,QAA9C;AACD,GAFD;;AAIA,SAAOX,MAAMc,MAAb,EAAqB;AACnBX,cAAUA,QAAQY,IAAR,CAAaf,MAAMgB,KAAN,EAAb,EAA4BhB,MAAMgB,KAAN,EAA5B,CAAV;AACD;;AAED,SAAOb,OAAP;AACD,CAjCD;;AAmCA;AACAT,gBAAMY,OAAN,CAAc,CAAC,QAAD,EAAW,KAAX,EAAkB,MAAlB,CAAd,EAAyC,SAASW,mBAAT,CAA6BnB,MAA7B,EAAqC;AAC5E;AACAb,QAAMO,SAAN,CAAgBM,MAAhB,IAA0B,UAASF,GAAT,EAAcH,MAAd,EAAsB;AAC9C,WAAO,KAAKJ,OAAL,CAAaK,gBAAMC,KAAN,CAAYF,UAAU,EAAtB,EAA0B;AAC5CK,cAAQA,MADoC;AAE5CF,WAAKA;AAFuC,KAA1B,CAAb,CAAP;AAID,GALD;AAMD,CARD;;AAUAF,gBAAMY,OAAN,CAAc,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,CAAd,EAAwC,SAASY,qBAAT,CAA+BpB,MAA/B,EAAuC;AAC7E;AACAb,QAAMO,SAAN,CAAgBM,MAAhB,IAA0B,UAASF,GAAT,EAAcuB,IAAd,EAAoB1B,MAApB,EAA4B;AACpD,WAAO,KAAKJ,OAAL,CAAaK,gBAAMC,KAAN,CAAYF,UAAU,EAAtB,EAA0B;AAC5CK,cAAQA,MADoC;AAE5CF,WAAKA,GAFuC;AAG5CuB,YAAMA;AAHsC,KAA1B,CAAb,CAAP;AAKD,GAND;AAOD,CATD;;kBAWelC,K","file":"Axios.js","sourcesContent":["'use strict';\n\nimport defaults from './../defaults';\nimport utils from './../utils';\nimport InterceptorManager from './InterceptorManager';\nimport dispatchRequest from './dispatchRequest';\nimport isAbsoluteURL from './../helpers/isAbsoluteURL';\nimport combineURLs from './../helpers/combineURLs';\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nexport default Axios;\n"]}