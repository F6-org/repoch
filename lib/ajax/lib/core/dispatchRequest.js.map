{"version":3,"sources":["../../../../src/ajax/lib/core/dispatchRequest.js"],"names":["dispatchRequest","throwIfCancellationRequested","config","cancelToken","throwIfRequested","headers","data","transformRequest","utils","merge","common","method","forEach","cleanHeaderConfig","adapter","defaults","then","onAdapterResolution","response","transformResponse","onAdapterRejection","reason","Promise","reject"],"mappings":"AAAA;;;;;kBAsBwBA,e;;AApBxB;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;AAGA,SAASC,4BAAT,CAAsCC,MAAtC,EAA8C;AAC5C,MAAIA,OAAOC,WAAX,EAAwB;AACtBD,WAAOC,WAAP,CAAmBC,gBAAnB;AACD;AACF;;AAED;;;;;;AAMe,SAASJ,eAAT,CAAyBE,MAAzB,EAAiC;AAC9CD,+BAA6BC,MAA7B;;AAEA;AACAA,SAAOG,OAAP,GAAiBH,OAAOG,OAAP,IAAkB,EAAnC;;AAEA;AACAH,SAAOI,IAAP,GAAc,6BACZJ,OAAOI,IADK,EAEZJ,OAAOG,OAFK,EAGZH,OAAOK,gBAHK,CAAd;;AAMA;AACAL,SAAOG,OAAP,GAAiBG,gBAAMC,KAAN,CACfP,OAAOG,OAAP,CAAeK,MAAf,IAAyB,EADV,EAEfR,OAAOG,OAAP,CAAeH,OAAOS,MAAtB,KAAiC,EAFlB,EAGfT,OAAOG,OAAP,IAAkB,EAHH,CAAjB;;AAMAG,kBAAMI,OAAN,CACE,CAAC,QAAD,EAAW,KAAX,EAAkB,MAAlB,EAA0B,MAA1B,EAAkC,KAAlC,EAAyC,OAAzC,EAAkD,QAAlD,CADF,EAEE,SAASC,iBAAT,CAA2BF,MAA3B,EAAmC;AACjC,WAAOT,OAAOG,OAAP,CAAeM,MAAf,CAAP;AACD,GAJH;;AAOA,MAAIG,UAAUZ,OAAOY,OAAP,IAAkBC,mBAASD,OAAzC;;AAEA,SAAOA,QAAQZ,MAAR,EAAgBc,IAAhB,CAAqB,SAASC,mBAAT,CAA6BC,QAA7B,EAAuC;AACjEjB,iCAA6BC,MAA7B;;AAEA;AACAgB,aAASZ,IAAT,GAAgB,6BACdY,SAASZ,IADK,EAEdY,SAASb,OAFK,EAGdH,OAAOiB,iBAHO,CAAhB;;AAMA,WAAOD,QAAP;AACD,GAXM,EAWJ,SAASE,kBAAT,CAA4BC,MAA5B,EAAoC;AACrC,QAAI,CAAC,wBAASA,MAAT,CAAL,EAAuB;AACrBpB,mCAA6BC,MAA7B;;AAEA;AACA,UAAImB,UAAUA,OAAOH,QAArB,EAA+B;AAC7BG,eAAOH,QAAP,CAAgBZ,IAAhB,GAAuB,6BACrBe,OAAOH,QAAP,CAAgBZ,IADK,EAErBe,OAAOH,QAAP,CAAgBb,OAFK,EAGrBH,OAAOiB,iBAHc,CAAvB;AAKD;AACF;;AAED,WAAOG,QAAQC,MAAR,CAAeF,MAAf,CAAP;AACD,GA1BM,CAAP;AA2BD","file":"dispatchRequest.js","sourcesContent":["'use strict';\n\nimport utils from './../utils';\nimport transformData from './transformData';\nimport isCancel from '../cancel/isCancel';\nimport defaults from '../defaults';\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n"]}