{"version":3,"sources":["../../../src/history/lib/AsyncUtils.js"],"names":["loopAsync","turns","work","callback","currentTurn","isDone","isSync","hasNext","doneArgs","done","args","next"],"mappings":";;;;;;;;AAAO,IAAMA,gCAAY,SAAZA,SAAY,CAACC,KAAD,EAAQC,IAAR,EAAcC,QAAd,EAA2B;AAClD,MAAIC,cAAc,CAAlB;AAAA,MAAqBC,SAAS,KAA9B;AACA,MAAIC,SAAS,KAAb;AAAA,MAAoBC,UAAU,KAA9B;AAAA,MAAqCC,iBAArC;;AAEA,MAAMC,OAAO,SAAPA,IAAO,GAAa;AAAA,sCAATC,IAAS;AAATA,UAAS;AAAA;;AACxBL,aAAS,IAAT;;AAEA,QAAIC,MAAJ,EAAY;AACV;AACAE,iBAAWE,IAAX;AACA;AACD;;AAEDP,8BAAYO,IAAZ;AACD,GAVD;;AAYA,MAAMC,OAAO,SAAPA,IAAO,GAAM;AACjB,QAAIN,MAAJ,EACE;;AAEFE,cAAU,IAAV;;AAEA,QAAID,MAAJ,EACE,OAPe,CAOR;;AAETA,aAAS,IAAT;;AAEA,WAAO,CAACD,MAAD,IAAWD,cAAcH,KAAzB,IAAkCM,OAAzC,EAAkD;AAChDA,gBAAU,KAAV;AACAL,WAAKE,aAAL,EAAoBO,IAApB,EAA0BF,IAA1B;AACD;;AAEDH,aAAS,KAAT;;AAEA,QAAID,MAAJ,EAAY;AACV;AACAF,mDAAYK,QAAZ;AACA;AACD;;AAED,QAAIJ,eAAeH,KAAf,IAAwBM,OAA5B,EAAqC;AACnCF,eAAS,IAAT;AACAF;AACD;AACF,GA5BD;;AA8BAQ;AACD,CA/CM","file":"AsyncUtils.js","sourcesContent":["export const loopAsync = (turns, work, callback) => {\n  let currentTurn = 0, isDone = false\n  let isSync = false, hasNext = false, doneArgs\n\n  const done = (...args) => {\n    isDone = true\n\n    if (isSync) {\n      // Iterate instead of recursing if possible.\n      doneArgs = args\n      return\n    }\n\n    callback(...args)\n  }\n\n  const next = () => {\n    if (isDone)\n      return\n\n    hasNext = true\n\n    if (isSync)\n      return // Iterate instead of recursing if possible.\n\n    isSync = true\n\n    while (!isDone && currentTurn < turns && hasNext) {\n      hasNext = false\n      work(currentTurn++, next, done)\n    }\n\n    isSync = false\n\n    if (isDone) {\n      // This means the loop finished synchronously.\n      callback(...doneArgs)\n      return\n    }\n\n    if (currentTurn >= turns && hasNext) {\n      isDone = true\n      callback()\n    }\n  }\n\n  next()\n}\n"]}