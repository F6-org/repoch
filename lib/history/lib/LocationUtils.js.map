{"version":3,"sources":["../../../src/history/lib/LocationUtils.js"],"names":["createQuery","props","Object","create","createLocation","input","action","POP","key","object","path","pathname","search","hash","state","isDate","prototype","toString","call","statesAreEqual","a","b","typeofA","typeofB","Array","isArray","keysofA","keys","keysofB","length","every","item","index","locationsAreEqual"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEO,IAAMA,oCAAc,SAAdA,WAAc,CAACC,KAAD;AAAA,SACzB,SAAcC,OAAOC,MAAP,CAAc,IAAd,CAAd,EAAmCF,KAAnC,CADyB;AAAA,CAApB;;AAGA,IAAMG,0CAAiB,SAAjBA,cAAiB,GAA2C;AAAA,MAA1CC,KAA0C,uEAAlC,GAAkC;AAAA,MAA7BC,MAA6B,uEAApBC,YAAoB;AAAA,MAAfC,GAAe,uEAAT,IAAS;;AACvE,MAAMC,SAAS,OAAOJ,KAAP,KAAiB,QAAjB,GAA4B,0BAAUA,KAAV,CAA5B,GAA+CA,KAA9D;;AAEA,yBACE,CAACI,OAAOC,IADV,EAEE,qEAFF;;AAKA,MAAMC,WAAWF,OAAOE,QAAP,IAAmB,GAApC;AACA,MAAMC,SAASH,OAAOG,MAAP,IAAiB,EAAhC;AACA,MAAMC,OAAOJ,OAAOI,IAAP,IAAe,EAA5B;AACA,MAAMC,QAAQL,OAAOK,KAArB;;AAEA,SAAO;AACLH,sBADK;AAELC,kBAFK;AAGLC,cAHK;AAILC,gBAJK;AAKLR,kBALK;AAMLE;AANK,GAAP;AAQD,CArBM;;AAuBP,IAAMO,SAAS,SAATA,MAAS,CAACN,MAAD;AAAA,SACbP,OAAOc,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BT,MAA/B,MAA2C,eAD9B;AAAA,CAAf;;AAGO,IAAMU,0CAAiB,SAAjBA,cAAiB,CAACC,CAAD,EAAIC,CAAJ,EAAU;AACtC,MAAID,MAAMC,CAAV,EACE,OAAO,IAAP;;AAEF,MAAMC,iBAAiBF,CAAjB,yCAAiBA,CAAjB,CAAN;AACA,MAAMG,iBAAiBF,CAAjB,yCAAiBA,CAAjB,CAAN;;AAEA,MAAIC,YAAYC,OAAhB,EACE,OAAO,KAAP;;AAEF,2BACED,YAAY,UADd,EAEE,gDAFF;;AAKA;AACA,MAAIA,YAAY,QAAhB,EAA0B;AACxB,6BACE,EAAEP,OAAOK,CAAP,KAAaL,OAAOM,CAAP,CAAf,CADF,EAEE,mDAFF;;AAKA,QAAI,CAACG,MAAMC,OAAN,CAAcL,CAAd,CAAL,EAAuB;AACrB,UAAMM,UAAUxB,OAAOyB,IAAP,CAAYP,CAAZ,CAAhB;AACA,UAAMQ,UAAU1B,OAAOyB,IAAP,CAAYN,CAAZ,CAAhB;AACA,aAAOK,QAAQG,MAAR,KAAmBD,QAAQC,MAA3B,IACLH,QAAQI,KAAR,CAAc;AAAA,eAAOX,eAAeC,EAAEZ,GAAF,CAAf,EAAuBa,EAAEb,GAAF,CAAvB,CAAP;AAAA,OAAd,CADF;AAED;;AAED,WAAOgB,MAAMC,OAAN,CAAcJ,CAAd,KACLD,EAAES,MAAF,KAAaR,EAAEQ,MADV,IAELT,EAAEU,KAAF,CAAQ,UAACC,IAAD,EAAOC,KAAP;AAAA,aAAiBb,eAAeY,IAAf,EAAqBV,EAAEW,KAAF,CAArB,CAAjB;AAAA,KAAR,CAFF;AAGD;;AAED;AACA;AACA,SAAO,KAAP;AACD,CArCM;;AAuCA,IAAMC,gDAAoB,SAApBA,iBAAoB,CAACb,CAAD,EAAIC,CAAJ;AAAA,SAC/BD,EAAEZ,GAAF,KAAUa,EAAEb,GAAZ;AACA;AACAY,IAAET,QAAF,KAAeU,EAAEV,QAFjB,IAGAS,EAAER,MAAF,KAAaS,EAAET,MAHf,IAIAQ,EAAEP,IAAF,KAAWQ,EAAER,IAJb,IAKAM,eAAeC,EAAEN,KAAjB,EAAwBO,EAAEP,KAA1B,CAN+B;AAAA,CAA1B","file":"LocationUtils.js","sourcesContent":["import invariant from 'invariant'\nimport warning from 'warning'\nimport { parsePath } from './PathUtils'\nimport { POP } from './Actions'\n\nexport const createQuery = (props) =>\n  Object.assign(Object.create(null), props)\n\nexport const createLocation = (input = '/', action = POP, key = null) => {\n  const object = typeof input === 'string' ? parsePath(input) : input\n\n  warning(\n    !object.path,\n    'Location descriptor objects should have a `pathname`, not a `path`.'\n  )\n\n  const pathname = object.pathname || '/'\n  const search = object.search || ''\n  const hash = object.hash || ''\n  const state = object.state\n\n  return {\n    pathname,\n    search,\n    hash,\n    state,\n    action,\n    key\n  }\n}\n\nconst isDate = (object) =>\n  Object.prototype.toString.call(object) === '[object Date]'\n\nexport const statesAreEqual = (a, b) => {\n  if (a === b)\n    return true\n\n  const typeofA = typeof a\n  const typeofB = typeof b\n\n  if (typeofA !== typeofB)\n    return false\n\n  invariant(\n    typeofA !== 'function',\n    'You must not store functions in location state'\n  )\n\n  // Not the same object, but same type.\n  if (typeofA === 'object') {\n    invariant(\n      !(isDate(a) && isDate(b)),\n      'You must not store Date objects in location state'\n    )\n\n    if (!Array.isArray(a)) {\n      const keysofA = Object.keys(a)\n      const keysofB = Object.keys(b)\n      return keysofA.length === keysofB.length &&\n        keysofA.every(key => statesAreEqual(a[key], b[key]))\n    }\n\n    return Array.isArray(b) &&\n      a.length === b.length &&\n      a.every((item, index) => statesAreEqual(item, b[index]))\n  }\n\n  // All other serializable types (string, number, boolean)\n  // should be strict equal.\n  return false\n}\n\nexport const locationsAreEqual = (a, b) =>\n  a.key === b.key &&\n  // a.action === b.action && // Different action !== location change.\n  a.pathname === b.pathname &&\n  a.search === b.search &&\n  a.hash === b.hash &&\n  statesAreEqual(a.state, b.state)\n"]}