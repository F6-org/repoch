{"version":3,"sources":["../../../src/history/lib/DOMStateStorage.js"],"names":["QuotaExceededErrors","QuotaExceededError","QUOTA_EXCEEDED_ERR","SecurityErrors","SecurityError","KeyPrefix","createKey","key","saveState","state","window","sessionStorage","removeItem","setItem","JSON","stringify","error","name","length","readState","json","getItem","undefined","parse"],"mappings":";;;;;;;AAAA;;;;;;AAEA,IAAMA,sBAAsB;AAC1BC,sBAAoB,IADM;AAE1BC,sBAAoB;AAFM,CAA5B;;AAKA,IAAMC,iBAAiB;AACrBC,iBAAe;AADM,CAAvB;;AAIA,IAAMC,YAAY,YAAlB;;AAEA,IAAMC,YAAY,SAAZA,SAAY,CAACC,GAAD;AAAA,SAChBF,YAAYE,GADI;AAAA,CAAlB;;AAGO,IAAMC,gCAAY,SAAZA,SAAY,CAACD,GAAD,EAAME,KAAN,EAAgB;AACvC,MAAI,CAACC,OAAOC,cAAZ,EAA4B;AAC1B;AACA;AACA,2BACE,KADF,EAEE,iEAFF;;AAKA;AACD;;AAED,MAAI;AACF,QAAIF,SAAS,IAAb,EAAmB;AACjBC,aAAOC,cAAP,CAAsBC,UAAtB,CAAiCN,UAAUC,GAAV,CAAjC;AACD,KAFD,MAEO;AACLG,aAAOC,cAAP,CAAsBE,OAAtB,CAA8BP,UAAUC,GAAV,CAA9B,EAA8CO,KAAKC,SAAL,CAAeN,KAAf,CAA9C;AACD;AACF,GAND,CAME,OAAOO,KAAP,EAAc;AACd,QAAIb,eAAea,MAAMC,IAArB,CAAJ,EAAgC;AAC9B;AACA;AACA,6BACE,KADF,EAEE,0FAFF;;AAKA;AACD;;AAED,QAAIjB,oBAAoBgB,MAAMC,IAA1B,KAAmCP,OAAOC,cAAP,CAAsBO,MAAtB,KAAiC,CAAxE,EAA2E;AACzE;AACA,6BACE,KADF,EAEE,wFAFF;;AAKA;AACD;;AAED,UAAMF,KAAN;AACD;AACF,CA1CM;;AA4CA,IAAMG,gCAAY,SAAZA,SAAY,CAACZ,GAAD,EAAS;AAChC,MAAIa,aAAJ;AACA,MAAI;AACFA,WAAOV,OAAOC,cAAP,CAAsBU,OAAtB,CAA8Bf,UAAUC,GAAV,CAA9B,CAAP;AACD,GAFD,CAEE,OAAOS,KAAP,EAAc;AACd,QAAIb,eAAea,MAAMC,IAArB,CAAJ,EAAgC;AAC9B;AACA;AACA,6BACE,KADF,EAEE,0FAFF;;AAKA,aAAOK,SAAP;AACD;AACF;;AAED,MAAIF,IAAJ,EAAU;AACR,QAAI;AACF,aAAON,KAAKS,KAAL,CAAWH,IAAX,CAAP;AACD,KAFD,CAEE,OAAOJ,KAAP,EAAc;AACd;AACD;AACF;;AAED,SAAOM,SAAP;AACD,CA1BM","file":"DOMStateStorage.js","sourcesContent":["import warning from 'warning'\n\nconst QuotaExceededErrors = {\n  QuotaExceededError: true,\n  QUOTA_EXCEEDED_ERR: true\n}\n\nconst SecurityErrors = {\n  SecurityError: true\n}\n\nconst KeyPrefix = '@@History/'\n\nconst createKey = (key) =>\n  KeyPrefix + key\n\nexport const saveState = (key, state) => {\n  if (!window.sessionStorage) {\n    // Session storage is not available or hidden.\n    // sessionStorage is undefined in Internet Explorer when served via file protocol.\n    warning(\n      false,\n      '[history] Unable to save state; sessionStorage is not available'\n    )\n\n    return\n  }\n\n  try {\n    if (state == null) {\n      window.sessionStorage.removeItem(createKey(key))\n    } else {\n      window.sessionStorage.setItem(createKey(key), JSON.stringify(state))\n    }\n  } catch (error) {\n    if (SecurityErrors[error.name]) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      warning(\n        false,\n        '[history] Unable to save state; sessionStorage is not available due to security settings'\n      )\n\n      return\n    }\n\n    if (QuotaExceededErrors[error.name] && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      warning(\n        false,\n        '[history] Unable to save state; sessionStorage is not available in Safari private mode'\n      )\n\n      return\n    }\n\n    throw error\n  }\n}\n\nexport const readState = (key) => {\n  let json\n  try {\n    json = window.sessionStorage.getItem(createKey(key))\n  } catch (error) {\n    if (SecurityErrors[error.name]) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      warning(\n        false,\n        '[history] Unable to read state; sessionStorage is not available due to security settings'\n      )\n\n      return undefined\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json)\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return undefined\n}\n"]}