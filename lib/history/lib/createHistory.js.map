{"version":3,"sources":["../../../src/history/lib/createHistory.js"],"names":["createHistory","options","getCurrentLocation","getUserConfirmation","pushLocation","replaceLocation","go","keyLength","currentLocation","pendingLocation","beforeListeners","listeners","locationsHistories","status","getCurrentIndex","index","action","POP","forEach","loc","idx","key","updateLocation","nextLocation","currentIndex","PUSH","concat","slice","REPLACE","length","listener","listenBefore","push","filter","item","listen","createLocation","createKey","confirmTransitionTo","location","callback","next","done","result","message","ok","transitionTo","prevPath","nextPath","state","prevIndex","nextIndex","input","replace","goBack","goForward","keyLen","parseInt","Math","random","toString","substr","createHref","setStatus","_status","getStatus","getLocationKey","getRoutingHistory","insertRoutingHistoryBefore","oldLocation","insertPath","replacePath","insertPathArray","split","pathname","search","Error","unshift","window","history","replaceState","pushState","i","createPath"],"mappings":"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","file":"createHistory.js","sourcesContent":["import { loopAsync } from './AsyncUtils'\nimport { createPath } from './PathUtils'\nimport runTransitionHook from './runTransitionHook'\nimport { PUSH, REPLACE, POP } from './Actions'\nimport { readState, saveState } from './DOMStateStorage'\nimport {\n  createLocation as _createLocation,\n  statesAreEqual,\n  locationsAreEqual\n} from './LocationUtils'\n\nconst createHistory = (options = {}) => {\n  const {\n    getCurrentLocation,\n    getUserConfirmation,\n    pushLocation,\n    replaceLocation,\n    go,\n    keyLength\n  } = options\n\n  let currentLocation\n  let pendingLocation\n  let beforeListeners = []\n  let listeners = []\n  let locationsHistories = readState(\"locationsHistories\") || []\n  let status\n\n  const getCurrentIndex = () => {\n    let index = -1;\n    if (pendingLocation && pendingLocation.action === POP) {\n      locationsHistories.forEach(function(loc, idx) {\n        if (index === -1 && loc.key === pendingLocation.key) {\n          index = idx;\n        }\n      })\n    }      \n\n    if (currentLocation) {\n      locationsHistories.forEach(function(loc, idx) {\n        if (index === -1 && loc.key === currentLocation.key) {\n          index = idx;\n        }\n      })\n    }\n\n    return index\n  }\n\n  const updateLocation = (nextLocation) => {\n    let currentIndex = getCurrentIndex()\n    currentLocation = nextLocation\n    if (currentLocation.action === PUSH) {\n      locationsHistories = [].concat(locationsHistories.slice(0, currentIndex + 1), [currentLocation])\n      saveState(\"locationsHistories\", locationsHistories);\n    } else if (currentLocation.action === REPLACE) {\n      if (currentIndex < 0 && locationsHistories.length === 0) {\n        currentIndex = 0;\n      }\n      locationsHistories[currentIndex] = currentLocation;\n      saveState(\"locationsHistories\", locationsHistories);\n    }\n\n    listeners.forEach(listener => listener(currentLocation))\n  }\n\n  const listenBefore = (listener) => {\n    beforeListeners.push(listener)\n\n    return () =>\n      beforeListeners = beforeListeners.filter(item => item !== listener)\n  }\n\n  const listen = (listener) => {\n    listeners.push(listener)\n\n    currentLocation = getCurrentLocation();\n    // if a new navigation, reset history\n    if (currentLocation.key === null) {\n      currentLocation = createLocation(getCurrentLocation(), POP, createKey());\n      replaceLocation(currentLocation)\n      locationsHistories = [currentLocation]\n      saveState(\"locationsHistories\", locationsHistories)\n    }\n\n    return () =>\n      listeners = listeners.filter(item => item !== listener)\n  }\n\n  const confirmTransitionTo = (location, callback) => {\n    loopAsync(\n      beforeListeners.length,\n      (index, next, done) => {\n        runTransitionHook(beforeListeners[index], location, (result) =>\n          result != null ? done(result) : next()\n        )\n      },\n      (message) => {\n        if (getUserConfirmation && typeof message === 'string') {\n          getUserConfirmation(message, (ok) => callback(ok !== false))\n        } else {\n          callback(message !== false)\n        }\n      }\n    )\n  }\n\n  const transitionTo = (nextLocation) => {\n    if (\n      (currentLocation && locationsAreEqual(currentLocation, nextLocation)) ||\n      (pendingLocation && locationsAreEqual(pendingLocation, nextLocation))\n    )\n      return // Nothing to do\n\n    pendingLocation = nextLocation\n\n    confirmTransitionTo(nextLocation, (ok) => {\n      if (pendingLocation !== nextLocation)\n        return // Transition was interrupted during confirmation\n\n      status = currentLocation && currentLocation.key > nextLocation.key ? 0 : 1\n\n      pendingLocation = null\n\n      if (ok) {\n        // Treat PUSH to same path like REPLACE to be consistent with browsers\n        if (nextLocation.action === PUSH) {\n          const prevPath = createPath(currentLocation)\n          const nextPath = createPath(nextLocation)\n\n          if (nextPath === prevPath && statesAreEqual(currentLocation.state, nextLocation.state))\n            nextLocation.action = REPLACE\n        }\n\n        if (nextLocation.action === POP) {\n          updateLocation(nextLocation)\n        } else if (nextLocation.action === PUSH) {\n          if (pushLocation(nextLocation) !== false)\n            updateLocation(nextLocation)\n        } else if (nextLocation.action === REPLACE) {\n          if (replaceLocation(nextLocation) !== false)\n            updateLocation(nextLocation)\n        }\n      } else if (currentLocation && nextLocation.action === POP) {\n        let prevIndex = -1;\n        let nextIndex = -1;\n        locationsHistories.forEach(function(loc, idx) {\n          if (prevIndex === -1 && loc.key === currentLocation.key) {\n            prevIndex = idx;\n          }\n          if (nextIndex === -1 && loc.key === nextLocation.key) {\n            nextIndex = idx;\n          }\n        });\n        if (prevIndex !== -1 && nextIndex !== -1)\n          go(prevIndex - nextIndex) // Restore the URL\n      }\n    })\n  }\n\n  const push = (input) =>\n    transitionTo(createLocation(input, PUSH))\n\n  const replace = (input) => {\n    const currentIndex = getCurrentIndex()\n    transitionTo(createLocation(input, REPLACE, (locationsHistories[currentIndex] && locationsHistories[currentIndex].key) || createKey()))\n  }\n\n  const goBack = () => {\n    status = 0\n    go(-1)\n  }\n\n  const goForward = () => {\n    status = 1\n    go(1)\n  }\n\n  const createKey = () => {\n    let keyLen = (typeof keyLength !== 'number' || keyLength > 6) ? 6 : keyLength;\n    if (locationsHistories.length > 0 && locationsHistories[locationsHistories.length - 1].key) {\n      return parseInt(locationsHistories[locationsHistories.length - 1].key) + 1;\n    }\n    return parseInt(Math.random().toString().substr(2, keyLen));\n  }\n\n  const createHref = (location) =>\n    createPath(location)\n\n  const createLocation = (location, action, key = createKey()) =>\n    _createLocation(location, action, key)\n\n  const setStatus = (_status) => {\n    status = _status\n  }\n\n  const getStatus = () =>\n    status\n\n  const getLocationKey = () =>\n    getCurrentLocation().key\n  \n  const getRoutingHistory = () => {\n    return { locationsHistories: locationsHistories }\n  }\n\n  const insertRoutingHistoryBefore = (oldLocation, insertPath, replacePath) => {\n    let insertPathArray = insertPath && insertPath.split('?');\n    let pathname = insertPathArray && insertPathArray[0];\n    let search = insertPathArray ? '?' + insertPathArray[1] : '';\n    if (oldLocation) {\n      let currentIndex = -1;\n      // the first time navigation to a page, oldLocation's key is null\n      if (oldLocation.key === null) {\n        currentIndex = 0;\n      } else {\n        locationsHistories.forEach(function(loc, idx) {\n          if (currentIndex === -1 && loc.key === oldLocation.key) {\n            currentIndex = idx;\n          }\n        });\n      }\n        \n      if (currentIndex < 0) {\n        throw Error('no such location in history');\n      } else if (currentIndex === 0) {\n        locationsHistories.unshift({ key: oldLocation.key - 1, pathname, search });\n        saveState(\"locationsHistories\", locationsHistories);\n        window.history.replaceState({ key: oldLocation.key - 1 }, null, insertPath);\n        window.history.pushState({ key: oldLocation.key }, null, replacePath);\n      } else {\n        for (let i = currentIndex - 1; i >= 0; i--) {\n          locationsHistories[i].key--;\n        }\n\n        locationsHistories = [].concat(\n          locationsHistories.slice(0, currentIndex), \n          [{ key: oldLocation.key - 1, pathname, search }],\n          locationsHistories.slice(currentIndex)\n        );\n        saveState(\"locationsHistories\", locationsHistories);\n        window.history.replaceState({ key: oldLocation.key - 1 }, null, insertPath);\n        window.history.pushState({ key: oldLocation.key }, null, replacePath);\n      }\n    }\n\n    return {\n      locationsHistories: locationsHistories\n    }\n  }\n\n  return {\n    getCurrentLocation,\n    listenBefore,\n    listen,\n    transitionTo,\n    push,\n    replace,\n    go,\n    goBack,\n    goForward,\n    createKey,\n    createPath,\n    createHref,\n    createLocation,\n\n    setStatus,\n    getStatus,\n    getLocationKey,\n    getRoutingHistory,\n    insertRoutingHistoryBefore\n  }\n}\n\nexport default createHistory\n"]}