{"version":3,"sources":["../../src/equal/index.js"],"names":["arraysDiffer","shallowEqual","deepEqual","isSame","a","b","isDifferent","length","forEach","item","index","hasOwn","Object","prototype","hasOwnProperty","aKeys","keys","bKeys","every","key","call","x","y","reduce","isEqual","Array","isArray"],"mappings":";;;;;;;;QAUgBA,Y,GAAAA,Y;QAeAC,Y,GAAAA,Y;QAoBAC,S,GAAAA,S;QAQAC,M,GAAAA,M;AArDhB;;;;;;;;;;AAUO,SAASH,YAAT,CAAsBI,CAAtB,EAAyBC,CAAzB,EAA4B;AAC/B,QAAIC,cAAc,KAAlB;AACA,QAAIF,EAAEG,MAAF,KAAaF,EAAEE,MAAnB,EAA2B;AACvBD,sBAAc,IAAd;AACH,KAFD,MAEO;AACHF,UAAEI,OAAF,CAAU,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAC5B,gBAAI,CAACP,OAAOM,IAAP,EAAaJ,EAAEK,KAAF,CAAb,CAAL,EAA6B;AACzBJ,8BAAc,IAAd;AACH;AACJ,SAJD;AAKH;AACD,WAAOA,WAAP;AACH;;AAED,IAAIK,SAASC,OAAOC,SAAP,CAAiBC,cAA9B;AACO,SAASb,YAAT,CAAsBG,CAAtB,EAAyBC,CAAzB,EAA4B;AAC/B;AACA,QAAID,MAAMC,CAAV,EAAa;AACT,eAAO,IAAP;AACH;;AAED,QAAIU,QAAQH,OAAOI,IAAP,CAAYZ,CAAZ,CAAZ;AACA,QAAIa,QAAQL,OAAOI,IAAP,CAAYX,CAAZ,CAAZ;;AAEA;AACA,QAAIU,MAAMR,MAAN,KAAiBU,MAAMV,MAA3B,EAAmC;AAC/B,eAAO,KAAP;AACH;;AAED,WAAOQ,MAAMG,KAAN,CAAY,UAASC,GAAT,EAAa;AAC5B,eAAOR,OAAOS,IAAP,CAAYf,CAAZ,EAAec,GAAf,KAAuBf,EAAEe,GAAF,MAAWd,EAAEc,GAAF,CAAzC;AAEH,KAHM,CAAP;AAIH;;AAEM,SAASjB,SAAT,CAAmBmB,CAAnB,EAAsBC,CAAtB,EAAyB;AAC9B,WAAQD,KAAKC,CAAL,IAAU,QAAOD,CAAP,yCAAOA,CAAP,OAAa,QAAvB,IAAmC,QAAOC,CAAP,yCAAOA,CAAP,OAAa,QAAjD,GACJV,OAAOI,IAAP,CAAYK,CAAZ,EAAed,MAAf,KAA0BK,OAAOI,IAAP,CAAYM,CAAZ,EAAef,MAA1C,IACEK,OAAOI,IAAP,CAAYK,CAAZ,EAAeE,MAAf,CAAsB,UAASC,OAAT,EAAkBL,GAAlB,EAAuB;AAC3C,eAAOK,WAAWtB,UAAUmB,EAAEF,GAAF,CAAV,EAAkBG,EAAEH,GAAF,CAAlB,CAAlB;AACD,KAFD,EAEG,IAFH,CAFG,GAISE,MAAMC,CAJtB;AAKD;;AAEM,SAASnB,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACzB,QAAI,QAAOD,CAAP,yCAAOA,CAAP,eAAoBC,CAApB,yCAAoBA,CAApB,EAAJ,EAA2B;AACvB,eAAO,KAAP;AACH,KAFD,MAEO,IAAIoB,MAAMC,OAAN,CAActB,CAAd,CAAJ,EAAsB;AACzB,eAAO,CAACJ,aAAaI,CAAb,EAAgBC,CAAhB,CAAR;AACH,KAFM,MAEA,IAAI,QAAOD,CAAP,yCAAOA,CAAP,OAAa,QAAb,IAAyBA,MAAM,IAA/B,IAAuCC,MAAM,IAAjD,EAAuD;AAC1D,eAAOJ,aAAaG,CAAb,EAAgBC,CAAhB,CAAP;AACH;;AAED,WAAOD,MAAMC,CAAb;AACH","file":"index.js","sourcesContent":["/**\n * 判断深度比较两个变量\n * @name \n * @function\n * @param {String|Number|Object|Array} a\n * @param {String|Number|Object|Array} b\n * @return {Boolean} \n * @author MrGalaxyn\n */\n\nexport function arraysDiffer(a, b) {\n    var isDifferent = false;\n    if (a.length !== b.length) {\n        isDifferent = true;\n    } else {\n        a.forEach(function(item, index) {\n            if (!isSame(item, b[index])) {\n                isDifferent = true;\n            }\n        });\n    }\n    return isDifferent;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nexport function shallowEqual(a, b) {\n    // primitives (usually undefined)\n    if (a === b) {\n        return true;\n    }\n\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n\n    // prevents us from having to look at each key in b\n    if (aKeys.length !== bKeys.length) {\n        return false;\n    }\n\n    return aKeys.every(function(key){\n        return hasOwn.call(b, key) && a[key] === b[key];\n\n    });\n}\n\nexport function deepEqual(x, y) {\n  return (x && y && typeof x === 'object' && typeof y === 'object') ?\n    (Object.keys(x).length === Object.keys(y).length) &&\n      Object.keys(x).reduce(function(isEqual, key) {\n        return isEqual && deepEqual(x[key], y[key]);\n      }, true) : (x === y);\n}\n\nexport function isSame(a, b) {\n    if (typeof a !== typeof b) {\n        return false;\n    } else if (Array.isArray(a)) {\n        return !arraysDiffer(a, b);\n    } else if (typeof a === 'object' && a !== null && b !== null) {\n        return shallowEqual(a, b);\n    }\n\n    return a === b;\n}\n\n"]}