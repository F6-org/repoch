{"version":3,"sources":["../../src/upload/index.js"],"names":["noop","PICK_CODE","Upload","componentDidMount","container","refs","wrap","that","props","useJsBridge","targetNode","length","e","camera","onSuccess","pic_base64","ret","msg","type","data","code","onReaded","uploadPicAj","onFail","upServer","checkSize","withSize","watermark","maxFileSize","maxFileNum","imgMaxWidth","imgMaxHeight","storageType","fileFilter","fileType","fileExtensions","uploaded","getBase64","uploading","onUploading","error","readed","name","filename","extraData","ajaxOptions","then","response","catch","children","React","Component","propTypes","PropTypes","bool","string","number","oneOfType","func","object","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport addEventListener from 'dom-helpers/events/on';\nimport querySelectorAll from 'dom-helpers/query/querySelectorAll';\nimport pickImage from '../weibo-jsbridge/pick-image';\nimport uploader from './lib/uploader';\nimport { post, isCommonError } from '../ajax';\n\nfunction noop() {}\nconst PICK_CODE = {\n    403: '非法调用',\n    500: '客户端内部错误',\n    501: '客户端未实现此动作',\n    550: '客户端没有获取到结果',\n    553: '相关服务未启用'\n};\n\nexport default class Upload extends React.Component {\n    static propTypes = {\n        useJsBridge: PropTypes.bool, // 用JSbridge还是文件上传\n        checkSize: PropTypes.bool, // 是否检查文件宽高\n        withSize: PropTypes.bool, // 是否检查文件宽高\n        watermark: PropTypes.string, // 需要添加的水印文案\n        maxFileSize: PropTypes.number, // 文件大小\n        imgMaxWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]), // 文件大小\n        imgMaxHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]), // 文件宽度\n        onSuccess: PropTypes.func, // 成功回调\n        getBase64: PropTypes.func, // 获取图片base64\n        onFail: PropTypes.func, // 失败回调\n        onUploading: PropTypes.func, // 上传中回调\n        onReaded: PropTypes.func, // 图片读取结束回调\n        upServer: PropTypes.string,  // 图片上传服务器\n        data: PropTypes.object,\n        maxFileNum: PropTypes.number,\n        storageType: PropTypes.number, // 上传图片位置，1＝图床，2=微盘\n        extraData: PropTypes.object, // 额外需求提交的数据\n        fileType: PropTypes.string,\n        fileExtensions: PropTypes.string,\n        ajaxOptions: PropTypes.object // 额外的aj请求\n    };\n\n    static defaultProps = {\n        useJsBridge: false,\n        checkSize: false,\n        withSize: false,\n        watermark: \"\",\n        maxFileSize: 5,\n        imgMaxWidth: false,\n        imgMaxHeight: false,\n        upServer: '/v1/widgets/interface/proxy?api=interface/picture/upload',\n        data: {},\n        maxFileNum: 1,\n        onFail: noop,\n        onSuccess: noop,\n        getBase64: noop,\n        onUploading: noop,\n        onReaded: noop,\n        storageType: 1,\n        extraData: {},\n        fileType: 'img',\n        fileExtensions: '',\n        ajaxOptions: {}\n    };\n\n    componentDidMount = () => {\n        let container = this.refs.wrap;\n        let that = this;\n\n        if (this.props.useJsBridge) {\n            let targetNode = querySelectorAll(container, '[data-type=\"uploadBtn\"]');\n            targetNode = targetNode.length ===0 ? container : targetNode[0];\n\n            addEventListener(targetNode, 'click', function(e) {\n                pickImage({\n                    camera: true,\n                    onSuccess: function(pic_base64) {\n                        var ret = {\n                            msg: \"文件已获取\",\n                            type: 'readed',\n                            data: pic_base64,\n                            code: 100006\n                        };\n                        that.props.onReaded(ret);\n\n                        that.uploadPicAj(pic_base64, 'jsbridge');\n                    },\n                    onFail: function(code) {\n                        var ret = {\n                            msg: PICK_CODE[code],\n                            type: 'error',\n                            data: null,\n                            code: 100010\n                        };\n                        that.props.onFail(ret);\n                    }\n                });\n            });\n        } else {\n            uploader(container, {\n                upServer: this.props.upServer,\n                data: this.props.data,\n                checkSize: this.props.checkSize,\n                withSize: this.props.withSize,\n                watermark: this.props.watermark,\n                maxFileSize: this.props.maxFileSize,\n                maxFileNum: this.props.maxFileNum,\n                imgMaxWidth: this.props.imgMaxWidth,\n                imgMaxHeight: this.props.imgMaxHeight,\n                storageType: this.props.storageType,\n                fileFilter: this.props.fileType,\n                fileExtensions: this.props.fileExtensions,\n                uploaded: function(ret) {\n                    if (ret.code === 100000) {\n                        that.props.onSuccess(ret);\n                    } else {\n                        that.props.onFail(ret);\n                    }\n                },\n                getBase64: function(ret) {\n                    that.props.getBase64(ret);\n                },\n                uploading: function(ret) {\n                    that.props.onUploading(ret);\n                },\n                error: function(ret) {\n                    that.props.onFail(ret);\n                },\n                readed: function(ret) {\n                    that.props.onReaded(ret);\n                }\n            });\n        }\n    }\n\n    uploadPicAj = (pic_base64, name) => {\n        var data = Object.assign({\n            data: pic_base64,\n            storageType: this.props.storageType,\n            filename: name\n        }, this.props.extraData);\n\n        let that = this;\n\n        post(\n            this.props.upServer, \n            data, \n            this.props.ajaxOptions\n        ).then(response => {\n            var ret = {\n                msg: \"上传完成\",\n                type: 'uploaded',\n                data: response.data.data,\n                code: 100000\n            };\n            \n            that.props.onSuccess(ret, pic_base64);\n        }).catch(response => {\n            if (isCommonError(response)) return;\n\n            if (response.code) {\n                that.props.onFail({\n                    msg: response.msg,\n                    type: 'error',\n                    data: response.msg,\n                    code: 100001\n                });\n            } else {\n                that.props.onFail({\n                    msg: \"网络繁忙，请重试！\",\n                    type: 'error',\n                    data: msg,\n                    code: 100005\n                })\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div ref=\"wrap\">\n                { this.props.children }\n            </div>\n        );\n    }\n}\n\n"]}