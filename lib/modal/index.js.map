{"version":3,"sources":["../../src/modal/index.js"],"names":["noop","Modal","getChildContext","setMiddle","setPosition","state","exited","props","show","l","t","componentWillReceiveProps","nextProps","setState","componentWillUpdate","componentDidMount","transition","onShow","isMiddle","ReactDOM","findDOMNode","refs","container","pos","componentDidUpdate","prevProps","onHide","componentWillUnmount","renderBackMask","backdrop","maskStyle","maskClassName","handleBackdropClick","tempMaskCss","maskTransitionClassOpts","e","target","currentTarget","onMaskClick","document","body","handleDocumentKeyUp","getDialogElement","node","modal","lastChild","layerNode","firstChild","layerSize","w","offsetWidth","h","offsetHeight","winSize","window","innerWidth","innerHeight","_top","_left","keyCode","onEscapeKeyUp","transitionClassOpts","dialog","React","Children","only","children","mountModal","modal_style","left","top","position","className","withMask","zIndex","Component","propTypes","PropTypes","bool","func","object","string","defaultProps","exitedClassName","exitingClassName","enteredClassName","enteringClassName","childContextTypes"],"mappings":"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","file":"index.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport addEventListener from 'dom-helpers/events/on';\nimport removeEventListener from 'dom-helpers/events/off';\nimport Transition from '../transition';\nimport scrollPos from '../dom-helper/dom/scroll-pos';\nimport Pipe from '../pipe';\nimport './styles.css';\n\nfunction noop() {}\n\nexport default class Modal extends React.Component {\n    static propTypes = {\n        show: PropTypes.bool, // 展示 or 隐藏组件\n        onShow: PropTypes.func, // 展示组件后的回调\n        onHide: PropTypes.func, // 隐藏组件后的回调\n        onEscapeKeyUp: PropTypes.func, // 按ESC键的回调\n        transition: PropTypes.bool, // 是否动画过渡\n        transitionClassOpts: PropTypes.object, // 若采用动画过度，动画执行的参数\n        maskTransitionClassOpts: PropTypes.object, // 若采用动画过度，动画执行的参数\n        maskStyle: PropTypes.object, // 蒙层组件的内联样式\n        onMaskClick: PropTypes.func, // 点击蒙层以后的回调\n        maskClassName: PropTypes.string, // 蒙层组件的class名\n        className: PropTypes.string, // 组件的继承class\n        isMiddle: PropTypes.bool, // 是否居中显示\n        withMask: PropTypes.bool, // 是否有遮罩层\n        children: PropTypes.node, // 孩子节点\n        pos: PropTypes.object,\n        zIndex: PropTypes.string\n    };\n\n    static defaultProps = {\n        show: false,\n        withMask: true,\n        transition: false,\n        transitionClassOpts: {\n            exitedClassName: '',\n            exitingClassName: '',\n            enteredClassName: '',\n            enteringClassName: ''\n        },\n        maskTransitionClassOpts: null,\n        maskStyle: {},\n        maskClassName: 'transparent_mask',\n        isMiddle: false,\n\n        onMaskClick: noop,\n        onHide: noop,\n        onShow: noop,\n        onEscapeKeyUp: noop,\n\n        className: '',\n        pos: null,\n        zIndex: \"100010\"\n    };\n\n    static childContextTypes = {\n        setMiddle: PropTypes.func,\n        setPosition: PropTypes.func\n    }\n\n    getChildContext = () => {\n        return {\n            setMiddle: this.setMiddle,\n            setPosition: this.setPosition\n        };\n    }\n\n    state = {\n        exited: !this.props.show,\n        l: 0,\n        t: 0\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        if (nextProps.show) {\n            this.setState({ exited: false });\n        }\n    }\n\n    componentWillUpdate = (nextProps) => {\n    }\n\n    componentDidMount = () => {\n        if (!this.props.transition && this.props.show) {\n            this.onShow();\n        }\n\n        if (this.props.isMiddle) {\n            this.setMiddle(ReactDOM.findDOMNode(this.refs.container));\n        }\n\n        if (!this.props.isMiddle && this.props.pos) {\n            this.setPosition(this.props.pos);\n        }\n    }\n\n    componentDidUpdate = (prevProps) => {\n        let { transition } = this.props;\n\n        if (prevProps.show && !this.props.show && !transition) {\n            this.onHide();\n        } else if (!prevProps.show && this.props.show) {\n            this.onShow();\n            if (this.props.isMiddle) {\n                this.setMiddle(ReactDOM.findDOMNode(this.refs.container));\n            }\n            \n            if (!this.props.isMiddle && this.props.pos) {\n                this.setPosition(this.props.pos);\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        if (!this.props.transition && this.props.show) {\n            this.onHide();\n        }\n    }\n\n    renderBackMask = () => {\n        let backdrop = (\n            <div ref=\"backdrop\"\n                style={ this.props.maskStyle }\n                className={ this.props.maskClassName }\n                onClick={ this.handleBackdropClick } />\n        );\n\n        let tempMaskCss = this.props.maskTransitionClassOpts;\n\n        if (this.props.transition) {\n            backdrop = (\n                <Transition\n                    in={ this.props.show }\n                    timeout={ 2000 }\n                    { ...tempMaskCss }\n                >\n                    { backdrop }\n                </Transition>\n            );\n        }\n\n        return backdrop;\n    }\n\n    handleBackdropClick = (e) => {\n        if (e.target !== e.currentTarget) {\n            return;\n        }\n\n        this.props.onMaskClick();\n    }\n\n    onShow = () => {\n        addEventListener(document.body, 'keyup', this.handleDocumentKeyUp);\n        this.props.onShow();\n    }\n\n    onHide = () => {\n        removeEventListener(document.body, 'keyup', this.handleDocumentKeyUp);\n        this.props.onHide();\n        this.setState({ exited: true });\n    }\n\n    getDialogElement = () => {\n        let node = this.refs.modal;\n        return node && node.lastChild;\n    }\n\n    setMiddle = (layerNode) => {\n        if (!layerNode) return;\n        layerNode = layerNode.firstChild;\n\n        let layerSize = {};\n        layerSize.w = layerNode.offsetWidth;\n        layerSize.h = layerNode.offsetHeight;\n\n        let winSize = {};\n        winSize.w = window.innerWidth;\n        winSize.h = window.innerHeight;\n\n        let _top = scrollPos().t + (winSize.h - layerSize.h) / 2;\n        let _left = (winSize.w - layerSize.w) / 2;\n\n        if(_top<=10){_top=10;}\n\n        this.setState({ l: _left, t: _top });\n    }\n\n    setPosition = (pos = { l: 0, t: 0 }) => {\n        this.setState({ l: pos.l, t: pos.t });\n    }\n\n    handleDocumentKeyUp = (e) => {\n        if (e.keyCode === 27) {\n            this.props.onEscapeKeyUp(e);\n        }\n    }\n\n    render() {\n        let { show, transition, transitionClassOpts, maskStyle, ...props } = this.props;\n\n        let dialog = React.Children.only(this.props.children);\n\n        const mountModal = show || (transition && !this.state.exited);\n\n        if (!mountModal) {\n            return null;\n        }\n        if (transition) {\n            dialog = (\n                <Transition\n                    ref=\"container\"\n                    in={ show }\n                    timeout={ 1000 }\n                    onExited={ this.onHide }\n                    onEntered={ this.onShow }\n                    { ...transitionClassOpts }\n                >\n                    { dialog }\n                </Transition>\n            );\n        } else {\n            dialog = (\n                <div ref=\"container\">\n                    { dialog }\n                </div>\n            );\n        }\n\n        let modal_style = {};\n        if (this.props.isMiddle || this.props.pos) {\n            modal_style = {\n                left: this.state.l,\n                top: this.state.t,\n                position: 'absolute'\n            };\n        }\n        return (\n            <Pipe container={ props.container || null }>\n                <div\n                    ref='modal'\n                    style= { modal_style }\n                    className={ props.className }\n                >\n                    { this.props.withMask && this.renderBackMask() }\n                    <div style={{ position: 'absolute', zIndex: this.props.zIndex }} className={props.className}>\n                        { dialog }\n                    </div>\n                </div>\n            </Pipe>\n        );\n    }\n}\n\n// export default withStyles(styles)(Modal);\n\n"]}