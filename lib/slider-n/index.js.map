{"version":3,"sources":["../../src/slider-n/index.js"],"names":["NewSlider","state","selectedIndex","props","startSlide","componentDidMount","swipe","dom","callback","handleCallBack","componentDidUpdate","prevProps","reinitSwipeOnUpdate","children","length","kill","slideToIndex","slide","componentWillUnmount","shouldComponentUpdate","nextProps","shouldUpdate","componentWillReceiveProps","setState","self","index","onSliderChange","Number","forceUpdate","handleDotClick","buildSliders","continuous","temp","map","child","i","React","cloneElement","className","key","concat","buildDots","withDotted","_styles","slideStyles","Array","apply","item","bind","dotsWrapClass","e","containerStyles","wrapperStyles","wrapperClass","Component","propTypes","auto","PropTypes","number","speed","bool","disableScroll","stopPropagation","object","string","sliderStyles","func","transitionEnd","isInSlider","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './slider-n.css';\nimport Swipe from './swipe';\nimport { isSame } from '../equal';\n\nexport default class NewSlider extends React.Component {\n    static propTypes = {\n        auto: PropTypes.number,     // 自动slider开始时间\n        speed: PropTypes.number,    // slider切换时间\n        startSlide: PropTypes.number,   // 起始slider位置\n        slideToIndex: PropTypes.number, // 设置渲染完成后slider到哪个位置\n        continuous: PropTypes.bool,     // 是否循环\n        disableScroll: PropTypes.bool,  // 阻止全部该容器下的touch事件\n        stopPropagation: PropTypes.bool,    // 阻止事件冒泡\n        reinitSwipeOnUpdate : PropTypes.bool,   // 组件更新时是否重新初始化\n        wrapperStyles: PropTypes.object,    // slider外层样式\n        wrapperClass: PropTypes.string,    // slider外层类名\n        containerStyles: PropTypes.object,  // 容器样式\n        sliderStyles: PropTypes.object,  // 样式\n        shouldUpdate: PropTypes.func,   // 自定义是否重绘方法\n        onSliderChange: PropTypes.func,   // slider切换时的回调函数\n        transitionEnd: PropTypes.func,   // 动画执行后的回调函数\n        isInSlider: PropTypes.func,     // 是否在slider内部滑动\n        withDotted: PropTypes.bool,      // 是否需要显示点点点\n        dotsWrapClass: PropTypes.string, //底部滚动点点点的样式\n    }\n\n    static defaultProps = {\n        isInSlider: () => null,\n        withDotted: true,\n        onSliderChange: () => null,\n        startSlide: 0\n    }\n\n    state = {\n        selectedIndex: this.props.startSlide\n    }\n\n    componentDidMount = () => {\n        this.swipe = Swipe(this.dom, Object.assign({}, this.props, { callback: this.handleCallBack() }));\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if (this.props.reinitSwipeOnUpdate || this.props.children.length !== prevProps.children.length) {\n            this.swipe.kill();\n            this.swipe = Swipe(this.dom, Object.assign({}, this.props, { callback: this.handleCallBack() }));\n        }\n      \n        if (this.props.slideToIndex || this.props.slideToIndex === 0) {\n            this.swipe.slide(this.props.slideToIndex);\n        }\n    }\n\n    componentWillUnmount = () => {\n        this.swipe.kill();\n        this.swipe = null;\n    }\n\n    shouldComponentUpdate = (nextProps) => {\n        return (\n            (this.props.slideToIndex != nextProps.slideToIndex) ||\n            (this.props.shouldUpdate && typeof this.props.shouldUpdate === 'function' && \n            this.props.shouldUpdate(nextProps, this.props)) || \n            !isSame(nextProps.children, this.props.children)\n        );\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        // 属性变化时不重绘slider\n        if (this.props.children.length !== nextProps.children.length || nextProps.reinitSwipeOnUpdate) {\n            this.setState({ selectedIndex: this.props.startSlide })\n        }\n    }\n\n    handleCallBack = () => {\n        // arrow function 是定义时所在对象，所以此处不指向component,需要这么搞\n        var self = this;\n        return (index) => {\n            if (index >= self.props.children.length) {\n                index = index % self.props.children.length;\n            }\n\n            self.props.onSliderChange(index);\n            self.setState({ selectedIndex: Number(index) });\n            self.forceUpdate();\n        }\n    }\n\n    handleDotClick = (index) => {\n        this.swipe && this.swipe.slide(index);\n    }\n\n    buildSliders = () => {\n        if (!this.props.children.length) return null;\n        // 当需要循环时，需要复制两个来适配循环播放\n        if (this.props.continuous && this.props.children.length === 2) {\n            let temp = this.props.children.map((child, i) => \n                React.cloneElement(child, { \n                    className: \"child\", \n                    key: i + this.props.children.length\n                })\n            );\n            return temp.concat(temp.map((child, i) => \n                React.cloneElement(child, { \n                    className: \"child\", \n                    key: i\n                })\n            ));\n        }\n\n        return this.props.children.map((child, i) => \n            React.cloneElement(child, { \n                className: \"child\", \n                key: i\n            })\n        );\n    }\n\n    buildDots = () => {\n        if (!this.props.withDotted || this.props.children.length < 2) { return null; }\n\n        let _styles = this.props.slideStyles || \"\";\n\n        let children = Array.apply(null, Array(this.props.children.length)).map((item, i) => {\n            if (i === this.state.selectedIndex) {\n                return (\n                    <span key={ i }\n                        className={`dots dots_active ${_styles}`}\n                        onClick={ this.handleDotClick.bind(this, i) }>\n                    </span>\n                );\n            } else {\n                return (\n                    <span key={ i }\n                        className={`dots ${_styles}`}\n                        onClick={ this.handleDotClick.bind(this, i) }>\n                    </span>\n                );\n            }\n        });\n        return (\n            <div className={`dots_wrapper ${this.props.dotsWrapClass}`} >\n                { children }\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div  ref={e=> this.dom = e} style={ Object.assign({}, this.props.containerStyles) } className=\"slider-n-container\">\n                <div style={ Object.assign({}, this.props.wrapperStyles) } className={`slider-n-wrapper ${this.props.wrapperClass}`} >\n                    { this.buildSliders() }\n                </div>\n                { this.buildDots() }\n            </div>\n        );\n    }\n}"]}