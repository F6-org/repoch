{"version":3,"sources":["../../src/jump-page/index.js"],"names":["jumpPage","url","opts","process","env","BROWSER","force","replace","blank","window","location","href","open","encodeURIComponent","method","parsedUrl","realUrl","decodeURIComponent","split","indexOf","parsedRealUrl","browserHistory","pathname","search"],"mappings":";;;;;QAkBgBA,Q,GAAAA,Q;;AAJhB;;;;AACA;;;;AACA;;;;;;AAEO,SAASA,QAAT,CAAkBC,GAAlB,EAAkC;AAAA,QAAXC,IAAW,uEAAJ,EAAI;;AACrC,QAAI,CAACC,QAAQC,GAAR,CAAYC,OAAjB,EAA0B;;AADW,QAG/BC,KAH+B,GAGLJ,IAHK,CAG/BI,KAH+B;AAAA,QAGxBC,OAHwB,GAGLL,IAHK,CAGxBK,OAHwB;AAAA,QAGfC,KAHe,GAGLN,IAHK,CAGfM,KAHe;AAIrC;;AACA,QAAIF,KAAJ,EAAW;AACP,YAAIC,OAAJ,EAAa;AACTE,mBAAOC,QAAP,CAAgBH,OAAhB,CAAwBN,GAAxB;AACH,SAFD,MAEO;AACHQ,mBAAOC,QAAP,CAAgBC,IAAhB,GAAuBV,GAAvB;AACH;;AAED;AACH;;AAED,QAAIO,KAAJ,EAAW;AACP,YAAI,wBAAJ,EAAe;AACXC,mBAAOG,IAAP,CAAY,6BAA6BC,mBAAmBZ,GAAnB,CAAzC;AACH,SAFD,MAEO;AACHQ,mBAAOG,IAAP,CAAYX,GAAZ;AACH;;AAED;AACH;;AAED,QAAIa,SAASP,UAAU,SAAV,GAAsB,MAAnC;AACA,QAAIQ,YAAY,4BAAad,GAAb,CAAhB;AACA,QAAIc,cAAc,KAAlB,EAAyB;AACrB,YAAIC,UAAUC,mBAAmBhB,IAAIiB,KAAJ,CAAU,0BAAV,EAAsC,CAAtC,CAAnB,CAAd;AACA,YAAIF,YAAY,WAAhB,EAA6B;AACzB;AACA,gBAAIA,QAAQG,OAAR,CAAgB,cAAhB,IAAkC,CAAC,CAAvC,EAA0C;AACtCH,0BAAUA,QAAQE,KAAR,CAAc,cAAd,EAA8B,CAA9B,CAAV;AACH;AACD,gBAAIE,gBAAgB,4BAAaJ,OAAb,CAApB;AACA,gBAAII,kBAAkB,KAAtB,EAA6B;AACzBC,yCAAeP,MAAf,EAAuBE,OAAvB;AACA;AACH;AACJ;AACDf,eAAOA,IAAIkB,OAAJ,CAAY,qBAAZ,IAAqC,CAArC,GACF,CAAClB,IAAIkB,OAAJ,CAAY,GAAZ,IAAmB,CAAnB,GAAuB,GAAvB,GAA6B,GAA9B,IAAqC,4BADnC,GAEH,EAFJ;;AAIA,YAAIZ,OAAJ,EAAa;AACTE,mBAAOC,QAAP,CAAgBH,OAAhB,CAAwBN,GAAxB;AACH,SAFD,MAEO;AACHQ,mBAAOC,QAAP,CAAgBC,IAAhB,GAAuBV,GAAvB;AACH;AACJ,KAtBD,MAsBO;AAAA,YACGqB,QADH,GACwBP,SADxB,CACGO,QADH;AAAA,YACaC,MADb,GACwBR,SADxB,CACaQ,MADb;;AAEHF,iCAAeP,MAAf,EAAuBQ,YAAYC,SAAS,MAAMA,MAAf,GAAwB,EAApC,CAAvB;AACH;AACJ,C,CAvED","file":"index.js","sourcesContent":["/**\n * 页面跳转功能函数\n * @name jumpPage\n * @function\n * @param {String} node\n * @param {Object} \n *         {\n *             'force' : 强制使用window.location.href跳转\n *             'blank' : 新开页打开连接\n *             'replace':替换当前的url历史记录\n *         }\n * @author MrGalaxyn\n */\n\nimport browserHistory from '../react-router/lib/browserHistory';\nimport isSameOrigin from '../is-same-origin';\nimport isWeibo from '../ua-detector/is-weibo';\n\nexport function jumpPage(url, opts = {}) {\n    if (!process.env.BROWSER) return;\n\n    let { force, replace, blank } = opts;\n    //强制window.location.href跳转\n    if (force) {\n        if (replace) {\n            window.location.replace(url);\n        } else {\n            window.location.href = url;\n        }\n        \n        return;\n    }\n\n    if (blank) {\n        if (isWeibo()) {\n            window.open('sinaweibo://browser?url=' + encodeURIComponent(url));\n        } else {\n            window.open(url);\n        }\n        \n        return;\n    }\n\n    let method = replace ? 'replace' : 'push';\n    let parsedUrl = isSameOrigin(url);\n    if (parsedUrl === false) { \n        let realUrl = decodeURIComponent(url.split('sinaweibo://browser?url=')[1]);\n        if (realUrl !== 'undefined') {\n            // 临时的兼容代码\n            if (realUrl.indexOf('cf.weibo.com') > -1) {\n                realUrl = realUrl.split('cf.weibo.com')[1];\n            }\n            let parsedRealUrl = isSameOrigin(realUrl);\n            if (parsedRealUrl !== false) {\n                browserHistory[method](realUrl);\n                return;\n            }\n        }\n        url += url.indexOf('sinainternalbrowser') < 0 ? \n            ((url.indexOf('?') < 0 ? '?' : '&') + 'sinainternalbrowser=topnav') :\n            '';\n\n        if (replace) {\n            window.location.replace(url);\n        } else {\n            window.location.href = url;\n        }\n    } else {\n        let { pathname, search } = parsedUrl;\n        browserHistory[method](pathname + (search ? '?' + search : ''));\n    }\n}\n\n"]}