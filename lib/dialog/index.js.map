{"version":3,"sources":["../../src/dialog/index.jsx"],"names":["Dialog","props","timer","dom","state","style","document","body","overflow","show","content","classList","remove","add","e","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","onClose","title","actions","children","className","handleTouchMove","React","Children","toArray","Component"],"mappings":";;;;;;;;AACA;;AAEA;;;;AACA;;;;AAEA;;;;;;;;;;+eANA;;;IAQMA,M;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACTA,KADS;;AAGf,cAAKC,KAAL,GAAa,IAAb;AACA,cAAKC,GAAL,GAAW,EAAX;;AAEA,cAAKC,KAAL,GAAa;AACTC,mBAAO;AADE,SAAb;AANe;AAUlB;;AAED;AACA;;;;;+CAGuB,CAItB;AAHG;AACA;AACA;;;AAGJ;AACA;AACA;;;;6CAEqB;AACjBC,qBAASC,IAAT,CAAcF,KAAd,CAAoBG,QAApB,GAA+B,KAAKP,KAAL,CAAWQ,IAAX,GAAkB,QAAlB,GAA6B,EAA5D;;AAEA,gBAAMN,MAAM,KAAKA,GAAL,CAASO,OAArB;;AAEA,gBAAI,KAAKT,KAAL,CAAWQ,IAAf,EAAqB;AACjB;AACAN,oBAAIQ,SAAJ,CAAcC,MAAd,CAAqB,aAArB;AACH,aAHD,MAGO;AACH;AACAT,oBAAIQ,SAAJ,CAAcE,GAAd,CAAkB,aAAlB;AACH;AAEJ;;;wCAGeC,C,EAAG;AACfA,cAAEC,cAAF;AACAD,cAAEE,eAAF;AACAF,cAAEG,WAAF,CAAcC,wBAAd;AACAJ,cAAEG,WAAF,CAAcF,cAAd;AACH;;;gCAEOD,C,EAAG;AACP,iBAAKb,KAAL,CAAWkB,OAAX,IAAsB,KAAKlB,KAAL,CAAWkB,OAAX,EAAtB;AACH;;;iCAEQ;AAAA;;AAAA,yBAE6C,KAAKlB,KAFlD;AAAA,gBAEAmB,KAFA,UAEAA,KAFA;AAAA,gBAEOC,OAFP,UAEOA,OAFP;AAAA,gBAEgBC,QAFhB,UAEgBA,QAFhB;AAAA,gBAE0BC,SAF1B,UAE0BA,SAF1B;AAAA,gBAEqCd,IAFrC,UAEqCA,IAFrC;;;AAIL,mBACI;AAAA;AAAA,kBAAK,+BAA6Bc,SAAlC;AACI,iCAAa;AAAA,+BAAI,OAAKC,eAAL,CAAqBV,CAArB,CAAJ;AAAA;AACb;AAFJ;AAOI;AAAA;AAAA,sBAAK,KAAM;AAAA,mCAAK,OAAKX,GAAL,CAASO,OAAT,GAAmBI,CAAxB;AAAA,yBAAX,EAAsC,YAAcL,OAAK,EAAL,GAAQ,aAAtB,qBAAtC;AACKgB,oCAAMC,QAAN,CAAeC,OAAf,CAAuBL,QAAvB;AADL,iBAPJ;AAUI,8CAAC,eAAD,IAAM,MAAMb,IAAZ;AACA,6BAAS,iBAACK,CAAD,EAAO;AAAE,+BAAKK,OAAL,CAAaL,CAAb;AAAiB;AADnC;AAVJ,aADJ;AAgBH;;;;EA1EgBW,gBAAMG,S;;kBA6EZ5B,M","file":"index.js","sourcesContent":["// components\nimport './layer.style.scss';\n\nimport React from 'react';\nimport ReactDom from 'react-dom';\n\nimport Mask from '../mask/index.jsx';\n\nclass Dialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.timer = null;\n        this.dom = {}\n        \n        this.state = {\n            style: {\n            }\n        }\n    }\n\n    // componentDidMount() {\n    // }\n\n\n    componentWillUnmount() {\n        //clearTimeout(this.timer);\n        //this.timer = null\n        // window.removeEventListener('resize', this.handleResize.bind(this));\n    }\n\n    // componentDidMount() {\n    //     window.addEventListener('resize', this.handleResize.bind(this));\n    // }\n\n    componentDidUpdate() {\n        document.body.style.overflow = this.props.show ? 'hidden' : \"\"\n\n        const dom = this.dom.content;\n        \n        if (this.props.show) {\n            // $(dom).removeClass('transparent')\n            dom.classList.remove('transparent')\n        } else {\n            // $(dom).addClass('transparent');\n            dom.classList.add('transparent')\n        }\n\n    }\n\n\n    handleTouchMove(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation()\n        e.nativeEvent.preventDefault()\n    }\n\n    onClose(e) {\n        this.props.onClose && this.props.onClose()\n    }\n\n    render() {\n\n        var {title, actions, children, className, show} = this.props\n\n        return (\n            <div className={`dialog-wrapper ${className}`}\n                onTouchMove={e=> this.handleTouchMove(e)}\n                // style={{ display: this.props.show ? \"initial\" : 'none' }}\n                >\n                {\n                 \n                }\n                <div ref={ e => this.dom.content = e} className={`${show?'':'transparent'} dialog-content`}>\n                    {React.Children.toArray(children)}\n                </div>\n                <Mask show={show}\n                onClose={(e) => { this.onClose(e) } }\n                />\n            </div>\n        );\n    }\n}\n\nexport default Dialog;\n"]}