{"version":3,"sources":["../../src/logger/index.js"],"names":["send","pv","initLogger","setpid","getpid","gettid","lid","pid","tid","errSended","firstScreen","startVisitTime","stayTime","stat","window","$CONFIG","uid","onSuccess","res","network","onFail","code","extra","i_s_pd","sr","cache","first","i_s_vt","String","Date","now","substr","Math","random","oldOnError","onerror","message","file","line","column","error","apply","arguments","err"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * bee - page data collection\n * @author MrGalaxyn\n */\nimport getNetworkType from '../weibo-jsbridge/network-type';\nimport fromWeibo from '../ua-detector/is-weibo';\nimport createBackgroundTask from '../create-backgroud-tasks';\n\nlet lid, pid, tid;\nlet errSended = false;\nlet firstScreen = false;\nlet startVisitTime = 0;\nlet stayTime = 0;\n\nexport function send(stat) {\n    if (!window['__logger__']) {\n        return;\n    }\n\n    if ($CONFIG['uid']) {\n        stat.uid = $CONFIG['uid'];\n    }\n\n    if (!fromWeibo()) {\n        window['__logger__'](stat);\n    } else {\n        getNetworkType({\n            onSuccess: function(res) {\n                stat.network = res;\n                window['__logger__'](stat);\n            },\n            onFail: function(code) {\n                if (code !== 100) {\n                    window['__logger__'](stat);\n                }\n            }\n        });\n    }\n}\n\nexport function pv(extra) {\n    createBackgroundTask(() => {\n        let stat = Object.assign({ \n            pv: 1,\n            pid: getpid(),\n            i_s_pd: pid,\n            sr: $CONFIG[\"serverRender\"] ? 1 : 0,\n            cache: $CONFIG['fromCache'] ? 1 : 0,\n            network: false\n        }, extra);\n\n        if (!firstScreen) {\n            firstScreen = true;\n            stat.first = 1;\n        }\n\n        if (pid > 1) {\n            stat.i_s_vt = stayTime;\n        }\n\n        send(stat);\n    });\n}\n\nexport function initLogger() {\n    lid = String(Date.now()).substr(5) + String(Math.random()).substr(2, 4);\n    pid = 0;\n    let oldOnError = window.onerror;\n\n    window.onerror = function(message, file, line, column, error) {\n        oldOnError && oldOnError.apply(this, arguments);\n        if (errSended) { return; }\n        errSended = true;\n        let stat = { err: 1, pid: getpid() }\n        send(stat);\n    };\n}\n\nexport function setpid() {\n    errSended = false;\n    pid++;\n    tid = 0;\n    let now = Date.now();\n    if (pid > 1) {\n        stayTime = now - startVisitTime;\n    }\n    startVisitTime = now;\n}\n\nexport function getpid() {\n    return lid + String(100 + pid % 100).substr(1);\n}\n\nexport function gettid() {\n    return getpid() + String(1000 + (tid++) % 1000).substr(1);\n}\n\n"]}