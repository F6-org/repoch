{"version":3,"sources":["../../src/popup/index.js"],"names":["noop","Popup","state","show","props","entered","onShow","exited","onHide","componentWillReceiveProps","nextProps","setState","handleEscapeKeyUp","handleMaskClick","hideWhenMaskClick","handleClick","val","text","onChoose","layerTransitionClassOpts","enteredClassName","styles","enteringClassName","exitedClassName","exitingClassName","maskTransitionClassOpts","allData","data","map","item","i","bind","desc_text","display","zIndex","content","React","Component","propTypes","PropTypes","string","func","cancelTxt","array","bool","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './styles.css';\nimport Modal from '../modal';\n\nfunction noop() {}\n\nexport default class Popup extends React.Component {\n    static propTypes = {\n        content: PropTypes.string, // 组件提示文案\n        onShow: PropTypes.func, // 组件展示后回调函数\n        onHide: PropTypes.func, // 组件隐藏后回调函数\n        onChoose: PropTypes.func, // 选择某项后回调函数\n        cancelTxt: PropTypes.string, // 弹层取消按钮文案\n        data: PropTypes.array, // 弹层选项数组\n        hideWhenMaskClick: PropTypes.bool // 点击蒙层是否隐藏组件\n    }\n\n    static defaultProps = {\n        content: '提示',\n        cancelTxt: '取消',\n        data: [{ val: 'submit', text: '确定' }],\n        hideWhenMaskClick: true,\n\n        onHide: noop,\n        onShow: noop,\n        onChoose: noop\n    }\n\n    state = {\n        show: this.props.show\n    }\n\n    entered = () => {\n        this.props.onShow();\n    }\n\n    exited = () => {\n        this.props.onHide && this.props.onHide();\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        this.setState({ show: nextProps.show });\n    }\n\n    handleEscapeKeyUp = () => {\n        this.setState({ show: false });\n    }\n\n    handleMaskClick = () => {\n        if (!this.props.hideWhenMaskClick) return;\n        this.setState({ show: false });\n    }\n\n    handleClick = (val, text) => {\n        if (!this.state.show) return;\n        this.setState({ show: false });\n        this.props.onChoose && this.props.onChoose(val, text);\n    }\n\n    render() {\n        let layerTransitionClassOpts = {\n            enteredClassName: styles['layer_bottom_show'],\n            enteringClassName: styles['layer_bottom_show'],\n            exitedClassName: styles['layer_bottom_hide'],\n            exitingClassName: styles['layer_bottom_hide']\n        };\n\n        let maskTransitionClassOpts = {\n            enteredClassName: styles['mask_bottom_show'],\n            enteringClassName: styles['mask_bottom_show'],\n            exitedClassName: styles['mask_bottom_hide'],\n            exitingClassName: styles['mask_bottom_hide']\n        };\n\n        let allData = this.props.data.map((item, i) => {\n            return (\n                <li className=\"pop_bar publish\" \n                    key={ i } \n                    onClick={ this.handleClick.bind(this, item.val, item.text) } >\n                    <p>{ item.text }</p>\n                    { \n                        item.desc_text ?  \n                        <p className=\"pop_desc_text\">{item.desc_text}</p> :\n                        null\n                    }\n                </li>\n            );\n        });\n\n        return (\n            <Modal\n                show={ this.state.show }\n                transition={ true }\n                onShow={ this.entered }\n                onHide={ this.exited }\n                withMask={ true }\n                onEscapeKeyUp={ this.handleEscapeKeyUp }\n                transitionClassOpts= { layerTransitionClassOpts }\n                maskTransitionClassOpts= { maskTransitionClassOpts }\n                onMaskClick={ this.handleMaskClick }\n            >\n                <div className=\"mask\" style={ { display: 'block', zIndex: 10002 } }>\n                    <ul className=\"pop\">\n                        <li className=\"pop_bar\"> { this.props.content } </li>\n                        { allData }\n                        <li className=\"pop_bar cancel\" onClick={ this.handleClick.bind(this, 'cancel', '取消') }>取消</li>\n                    </ul>\n                </div>\n            </Modal>\n        );\n    }\n}\n\n// export default withStyles(styles)(Popup);\n\n"]}