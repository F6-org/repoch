{"version":3,"sources":["../../src/topNav/index.js"],"names":["TopNav","props","componentDidUpdate","setContainerScrollLeft","selected_index","buildMenuList","menuList","map","item","i","name","handleItemClick","bind","index","e","onChangeNav","allLi","nav_container","querySelectorAll","container_w","clientWidth","w","originOffsetW","scrollLeft","offsetW","len","length","offsetWidth","doAnimation","realOffset","step","that","count","animateFunc","window","requestAnimationFrame","state","React","Component"],"mappings":"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","file":"index.js","sourcesContent":["import React  from 'react';\nimport styles from './index.scss';\n\nexport default class TopNav extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuList: [],\n            selected_index: 0,\n            onChangeNav: () => null\n        }\n    }\n\n\n    componentDidUpdate = () => {\n        this.setContainerScrollLeft(this.props.selected_index);\n    }\n\n    buildMenuList = () => {\n        return this.props.menuList.map((item, i) => {\n            if (this.props.selected_index === i) {\n                return <li className=\"m-cur\" key={ i }><span>{ item.name }<em></em></span></li>;\n            }\n\n            return <li onClick={ this.handleItemClick.bind(this, i) } key={ i }><span>{ item.name }</span></li>;\n        });\n    }\n\n    handleItemClick = (index, e) => {\n        this.props.onChangeNav(index);\n    }\n\n    setContainerScrollLeft = (index) => {\n        let allLi = this.nav_container.querySelectorAll('li');\n        let container_w = this.nav_container.clientWidth;\n        let w = 0;\n        let originOffsetW = this.nav_container.scrollLeft;\n        let offsetW = 0;\n\n        for (let i = 0, len = allLi.length; i < len; i++) {\n            w += allLi[i].offsetWidth;\n            if (i >= index) {\n                break;\n            }\n        }\n\n        offsetW = (w - container_w) + container_w / 3;\n        offsetW = offsetW < 0 ? 0 : offsetW;\n\n        this.doAnimation(originOffsetW, offsetW);\n    }\n\n    doAnimation = (originOffsetW, offsetW) => {\n        let realOffset = offsetW - originOffsetW;\n        let step = realOffset / 15;\n        let that = this;\n        let count = 0;\n\n        function animateFunc() {\n            count++;\n            if (!that.nav_container) { return; }\n\n            that.nav_container.scrollLeft += step;\n            if (count < 15) {\n                window.requestAnimationFrame(animateFunc);\n            }\n        }\n        \n        window.requestAnimationFrame(animateFunc);\n    }\n\n    render() {\n        return (\n            <div className=\"m-top-nav\">\n                <div className=\"m-box\">\n                    <div className=\"m-box-col nav-main\">\n                        <div className=\"scroll-box\" ref={e=> this.nav_container = e}>\n                            <ul className=\"E_f14\" className=\"nav-item\">\n                                { this.buildMenuList() }\n                            </ul>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n        );\n    }\n}\n\n// export default withStyles(styles)(TopNav);\n"]}