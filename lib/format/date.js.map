{"version":3,"sources":["../../src/format/date.js"],"names":["dateFormat","format","date","Date","test","parseInt","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","replace","RegExp","$1","getFullYear","substr","length","k"],"mappings":";;;;;kBAAwBA,U;AAAT,SAASA,UAAT,CAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AAC7CA,WAAOA,gBAAgBC,IAAhB,GAAuBD,IAAvB,GAA8B,IAAIC,IAAJ,CAAS,WAAWC,IAAX,CAAgBF,IAAhB,IAAwBG,SAASH,IAAT,CAAxB,GAAyCA,IAAlD,CAArC;AACA,QAAIA,QAAQ,cAAZ,EAA6B;AAACA,eAAO,IAAIC,IAAJ,EAAP;AAAmB;;AAEjD,QAAIG,IAAI;AACJ,cAAOJ,KAAKK,QAAL,KAAkB,CADrB;AAEJ,cAAOL,KAAKM,OAAL,EAFH;AAGJ,cAAON,KAAKO,QAAL,EAHH;AAIJ,cAAOP,KAAKQ,UAAL,EAJH;AAKJ,cAAOR,KAAKS,UAAL,EALH;AAMJ,cAAOC,KAAKC,KAAL,CAAW,CAACX,KAAKK,QAAL,KAAkB,CAAnB,IAAwB,CAAnC,CANH;AAOJ,aAAML,KAAKY,eAAL;AAPF,KAAR;AASA,QAAI,OAAOV,IAAP,CAAYH,MAAZ,CAAJ,EAAyB;AACrBA,iBAASA,OAAOc,OAAP,CAAeC,OAAOC,EAAtB,EACL,CAACf,KAAKgB,WAAL,KAAqB,EAAtB,EAA0BC,MAA1B,CAAiC,IAAIH,OAAOC,EAAP,CAAUG,MAA/C,CADK,CAAT;AAEH;AACD,SAAK,IAAIC,CAAT,IAAcf,CAAd,EAAiB;AACb,YAAI,IAAIU,MAAJ,CAAW,MAAMK,CAAN,GAAU,GAArB,EAA0BjB,IAA1B,CAA+BH,MAA/B,CAAJ,EAA4C;AACxCA,qBAASA,OAAOc,OAAP,CAAeC,OAAOC,EAAtB,EAA0BD,OAAOC,EAAP,CAAUG,MAAV,IAAoB,CAApB,GAAwBd,EAAEe,CAAF,CAAxB,GAC/B,CAAC,OAAOf,EAAEe,CAAF,CAAR,EAAcF,MAAd,CAAqB,CAAC,KAAKb,EAAEe,CAAF,CAAN,EAAYD,MAAjC,CADK,CAAT;AAEH;AACJ;;AAED,WAAOnB,MAAP;AACH","file":"date.js","sourcesContent":["export default function dateFormat(format, date) {\n    date = date instanceof Date ? date : new Date(/^[0-9]+$/.test(date) ? parseInt(date) : date);\n    if (date == 'Invalid Date' ) {date = new Date();}\n\n    var o = { \n        \"M+\" : date.getMonth() + 1, \n        \"d+\" : date.getDate(), \n        \"h+\" : date.getHours(), \n        \"m+\" : date.getMinutes(), \n        \"s+\" : date.getSeconds(), \n        \"q+\" : Math.floor((date.getMonth() + 3) / 3), \n        \"S\" : date.getMilliseconds()\n    }\n    if (/(y+)/.test(format)) {\n        format = format.replace(RegExp.$1, \n            (date.getFullYear() + \"\").substr(4 - RegExp.$1.length)); \n    }\n    for (var k in o) {\n        if (new RegExp(\"(\" + k + \")\").test(format)) { \n            format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : \n                (\"00\" + o[k]).substr((\"\" + o[k]).length)); \n        } \n    }\n\n    return format; \n}\n"]}