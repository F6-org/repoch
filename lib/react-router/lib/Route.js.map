{"version":3,"sources":["../../../src/react-router/lib/Route.js"],"names":["Route","displayName","statics","createRouteFromReactElement","propTypes","path","string","component","components","getComponent","func","getComponents","render"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;AACA;;;;AAEA;;;;;;;;;;AAUA;AACA,IAAMA,QAAQ,gCAAiB;AAC7BC,eAAa,OADgB;;AAG7BC,WAAS;AACPC;AADO,GAHoB;;AAO7BC,aAAW;AACTC,UAAMC,iBADG;AAETC,2CAFS;AAGTC,6CAHS;AAITC,kBAAcC,eAJL;AAKTC,mBAAeD;AALN,GAPkB;;AAe7B;AACAE,QAhB6B,oBAgBpB;AACP,6BACE,KADF,EAEE,+EAFF;AAID;AArB4B,CAAjB,CAAd;;kBAyBeZ,K","file":"Route.js","sourcesContent":["import createReactClass from 'create-react-class'\nimport { string, func } from 'prop-types'\nimport invariant from 'invariant'\nimport { createRouteFromReactElement } from './RouteUtils'\nimport { component, components } from './InternalPropTypes'\n\n/**\n * A <Route> is used to declare which components are rendered to the\n * page when the URL matches a given pattern.\n *\n * Routes are arranged in a nested tree structure. When a new URL is\n * requested, the tree is searched depth-first to find a route whose\n * path matches the URL.  When one is found, all routes in the tree\n * that lead to it are considered \"active\" and their components are\n * rendered into the DOM, nested in the same order as in the tree.\n */\n/* eslint-disable react/require-render-return */\nconst Route = createReactClass({\n  displayName: 'Route',\n\n  statics: {\n    createRouteFromReactElement\n  },\n\n  propTypes: {\n    path: string,\n    component,\n    components,\n    getComponent: func,\n    getComponents: func\n  },\n\n  /* istanbul ignore next: sanity check */\n  render() {\n    invariant(\n      false,\n      '<Route> elements are for router configuration only and should not be rendered'\n    )\n  }\n\n})\n\nexport default Route\n"]}