{"version":3,"sources":["../../../src/react-router/lib/RouterContext.js"],"names":["RouterContext","displayName","mixins","propTypes","router","object","isRequired","location","routes","array","params","components","createElement","func","getDefaultProps","React","childContextTypes","getChildContext","props","component","render","element","reduceRight","index","route","routeParams","children","prop","Object","prototype","hasOwnProperty","call","elements","key","isValidElement"],"mappings":"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","file":"RouterContext.js","sourcesContent":["import invariant from 'invariant'\nimport React from 'react'\nimport createReactClass from 'create-react-class'\nimport { array, func, object } from 'prop-types'\n\nimport getRouteParams from './getRouteParams'\nimport { ContextProvider } from './ContextUtils'\nimport { isReactChildren } from './RouteUtils'\n\n/**\n * A <RouterContext> renders the component tree for a given router state\n * and sets the history object and the current location in context.\n */\nconst RouterContext = createReactClass({\n  displayName: 'RouterContext',\n\n  mixins: [ ContextProvider('router') ],\n\n  propTypes: {\n    router: object.isRequired,\n    location: object.isRequired,\n    routes: array.isRequired,\n    params: object.isRequired,\n    components: array.isRequired,\n    createElement: func.isRequired\n  },\n\n  getDefaultProps() {\n    return {\n      createElement: React.createElement\n    }\n  },\n\n  childContextTypes: {\n    router: object.isRequired\n  },\n\n  getChildContext() {\n    return {\n      router: this.props.router\n    }\n  },\n\n  createElement(component, props) {\n    return component == null ? null : this.props.createElement(component, props)\n  },\n\n  render() {\n    const { location, routes, params, components, router } = this.props\n    let element = null\n\n    if (components) {\n      element = components.reduceRight((element, components, index) => {\n        if (components == null)\n          return element // Don't create new children; use the grandchildren.\n\n        const route = routes[index]\n        const routeParams = getRouteParams(route, params)\n        const props = {\n          location,\n          params,\n          route,\n          router,\n          routeParams,\n          routes\n        }\n\n        if (isReactChildren(element)) {\n          props.children = element\n        } else if (element) {\n          for (const prop in element)\n            if (Object.prototype.hasOwnProperty.call(element, prop))\n              props[prop] = element[prop]\n        }\n\n        if (typeof components === 'object') {\n          const elements = {}\n\n          for (const key in components) {\n            if (Object.prototype.hasOwnProperty.call(components, key)) {\n              // Pass through the key as a prop to createElement to allow\n              // custom createElement functions to know which named component\n              // they're rendering, for e.g. matching up to fetched data.\n              elements[key] = this.createElement(components[key], {\n                key, ...props\n              })\n            }\n          }\n\n          return elements\n        }\n\n        return this.createElement(components, props)\n      }, element)\n    }\n\n    invariant(\n      element === null || element === false || React.isValidElement(element),\n      'The root route must render a single element'\n    )\n\n    return element\n  }\n\n})\n\nexport default RouterContext\n"]}